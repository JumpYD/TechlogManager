<?php

namespace Qihoo\ToolBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * QihooEmailGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QihooEmailGroupRepository extends EntityRepository
{
    public function getList($p, $pn)
    {
        return $this->query($p, $pn, array());
    }

    public function query($p, $pn, $params)
    {
        $p  = (int)$p;
        $pn = (int)$pn;
        $p  = ($p  <= 0) ? 1  : $p;
        $pn = ($pn <= 0) ? 20 : $pn;

        $em = $this->getEntityManager();

        $dql = "select g from QihooToolBundle:QihooEmailGroup g where 1=1";
        $where = "";
        if (isset($params['group_id']) && ! empty($params['group_id'])) {
            $where .= " and g.groupId=:group_id";
        }
        if (isset($params['group_name']) && ! empty($params['group_name'])) {
            $where .= " and g.groupName=:group_name";
        }

        $query = $em->createQuery($dql . $where);
        $query->setParameters($params);
        $first = ($p - 1) * $pn;
        $query->setFirstResult($first);
        $query->setMaxResults($pn);
        $entities = $query->getResult();
        return $entities;
    }

    public function getGroups()
    {
        $em = $this->getEntityManager();
        $dql = "select g.groupId,g.groupName,g.groupComment from QihooToolBundle:QihooEmailGroup g";
        $query = $em->createQuery($dql);
        $result = $query->getResult();
        $groups = array();
        foreach ($result as $k => $v) {
            $groups[$v['groupId']] = array(
                'group_id'   => $v['groupId'],
                'group_name' => $v['groupName'],
                'group_comment' => $v['groupComment'],
            );
        }
        return $groups;
    }

}
