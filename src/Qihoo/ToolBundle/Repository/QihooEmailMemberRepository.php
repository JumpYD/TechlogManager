<?php

namespace Qihoo\ToolBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * QihooEmailMemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QihooEmailMemberRepository extends EntityRepository
{
    public function query($p, $pn, $params)
    {
        $p  = (int)$p;
        $pn = (int)$pn;
        $p  = ($p  <= 0) ? 1  : $p;
        $pn = ($pn <= 0) ? 20 : $pn;

        $em = $this->getEntityManager();

        $dql = "select g from QihooToolBundle:QihooEmailMember g where 1=1";
        $where = "";
        if (isset($params['group_id']) && ! empty($params['group_id'])) {
            $where .= " and g.groupId=:group_id";
        }
        if (isset($params['email']) && ! empty($params['email'])) {
            $where .= " and g.email=:email";
        }
        if (isset($params['member_id']) && ! empty($params['member_id'])) {
            $where .= " and g.memberId=:member_id";
        }

        $query = $em->createQuery($dql . $where);
        $query->setParameters($params);
        $first = ($p - 1) * $pn;
        $query->setFirstResult($first);
        $query->setMaxResults($pn);
        $entities = $query->getResult();
        return $entities;
    }

    public function getMembers($groupId)
    {
        $em = $this->getEntityManager();
        $dql = "select m from QihooToolBundle:QihooEmailMember m where m.groupId=:group_id";
        $params = array('group_id'=>$groupId);
        $query = $em->createQuery($dql);
        $query->setParameters($params);
        $result = $query->getResult();
        $members = array();
        foreach ($result as $k => $v) {
            $members[] = array(
                'group_id' => $v->getGroupId(),
                'member_name' => $v->getMemberName(),
                'email' => $v->getEmail(),
                'phone' => $v->getPhone(),
            );
        }
        return $members;
    }
}
